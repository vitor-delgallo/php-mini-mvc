{
  "framework.name": "Mini-MVC",
  "framework.simple.description": "A simple micro PHP framework",
  "framework.body.details": "is a micro PHP framework with a basic layer separation structure, designed for small projects and landing pages.",
  "framework.features.routes": "Support for simple routing (using `league/route`)",
  "framework.features.templates": "View system with templates",
  "framework.features.helpers": "Helpers for session, response, database, language, etc.",
  "framework.features.simple": "Perfect for simple hosting environments without the need for large frameworks",
  "framework.description.purpose": "This project was designed for developers who need a lightweight and practical structure to organize their files and reuse resources across pages and small systems.",
  "calltoaction.create.landingpage": "Create your landing page now!",
  "doc.database.code.comment.env": "gets the current database driver (e.g., mysql, pgsql)",
  "doc.database.code.comment.is": "checks if the current driver is mysql",
  "doc.database.code.comment.ismysql": "execute logic if using MySQL",
  "doc.database.code.comment.ispostgres": "execute logic if using PostgreSQL",
  "doc.database.code.comment.isnone": "throw exception if no valid driver is configured",
  "doc.database.env.desc": "Returns the current database driver set in the environment.",
  "doc.database.is.desc": "Checks whether the current driver matches the given string (e.g., 'mysql').",
  "doc.database.ismysql.desc": "Returns true if the current driver is MySQL.",
  "doc.database.ispostgres.desc": "Returns true if the current driver is PostgreSQL.",
  "doc.database.isnone.desc": "Returns true if no valid database driver is properly configured.",
  "doc.alternatively": "<p><strong>Or alternatively, use:</strong></p>",
  "doc.session.code.comment.env": "gets the current session driver defined in the environment",
  "doc.session.env.desc": "Returns the current session driver set via the SESSION_DRIVER environment variable. Can be 'files', 'db', or 'none'.",
  "doc.session.code.comment.is": "checks if the current session driver is 'db'",
  "doc.session.is.desc": "Compares the current driver with the given value. Useful for conditional logic depending on session storage.",
  "doc.session.code.comment.isfiles": "checks if the current session driver is 'files'",
  "doc.session.isfiles.desc": "Returns true if the session is configured to use file storage.",
  "doc.session.code.comment.isdb": "checks if the current session driver is 'db'",
  "doc.session.isdb.desc": "Returns true if the session is set to use a database backend.",
  "doc.session.code.comment.isnone": "checks if the current session driver is 'none'",
  "doc.session.isnone.desc": "Returns true when no valid session driver is configured.",
  "doc.environment.code.comment.env": "gets the current environment defined via APP_ENV variable",
  "doc.environment.env.desc": "Returns the current application environment as a string: 'production', 'development', or 'testing'.",
  "doc.environment.code.comment.is": "checks if the current environment is 'development'",
  "doc.environment.is.desc": "Compares the current environment to a given string. Useful for conditionally handling different environments.",
  "doc.environment.code.comment.isproduction": "checks if the current environment is 'production'",
  "doc.environment.isproduction.desc": "Returns true if the current environment is set to production.",
  "doc.environment.code.comment.isdevelopment": "checks if the current environment is 'development'",
  "doc.environment.isdevelopment.desc": "Returns true if the current environment is set to development.",
  "doc.environment.code.comment.istesting": "checks if the current environment is 'testing'",
  "doc.environment.istesting.desc": "Returns true if the current environment is set to testing.",
  "doc.globals.code.comment.get": "Gets a global variable defined by environment or runtime",
  "doc.globals.code.comment.add": "Adds a new variable to the global configuration scope",
  "doc.globals.code.comment.reset": "Clears all in-memory configuration",
  "doc.globals.code.comment.loadenv": "Loads .env variables into the internal scope",
  "doc.globals.code.comment.env": "Gets the value of a variable from the .env file",
  "doc.globals.code.comment.forget": "Removes a specific configuration variable",
  "doc.globals.get.desc": "Allows access to any global variable loaded from .env or added at runtime.",
  "doc.globals.add.desc": "Adds or overrides a globally accessible configuration variable.",
  "doc.globals.merge.desc": "Merges multiple key/value pairs into the global configuration array.",
  "doc.globals.forget.desc": "Removes a single item from global configuration.",
  "doc.globals.forgetmany.desc": "Removes multiple keys from global configuration.",
  "doc.globals.reset.desc": "Erases all configuration stored in memory.",
  "doc.globals.loadenv.desc": "Loads `.env` variables using Dotenv and stores them internally for access via `Globals::env()`.",
  "doc.globals.env.desc": "Returns the value of an environment variable loaded from the `.env` file.",
  "doc.autoload.code.comment.from": "Recursively loads all PHP files from the given directory",
  "doc.autoload.from.desc": "Scans all `.php` files inside the folder (including subfolders) and `require_once` each. Ideal for helpers, services or components.",
  "doc.database.code.comment.connect": "Establishes a PDO connection using environment variables",
  "doc.database.code.comment.statement": "Executes an SQL command without returning data (INSERT, UPDATE, DELETE)",
  "doc.database.code.comment.select": "Runs a SELECT query and returns all rows",
  "doc.database.code.comment.selectrow": "Runs a SELECT query and returns a single row",
  "doc.database.code.comment.disconnect": "Closes the current PDO connection",
  "doc.database.connect.desc": "Returns a singleton PDO instance using .env credentials. Used internally by all DB calls.",
  "doc.database.statement.desc": "Executes SQL commands without expecting a result set. Ideal for updates, deletes, inserts.",
  "doc.database.select.desc": "Runs a SELECT and returns all resulting rows. If key is defined, returns only the specified column values.",
  "doc.database.selectrow.desc": "Runs a SELECT returning only one row (or one column). Useful for lookups by ID.",
  "doc.database.disconnect.desc": "Explicitly disconnects the PDO instance. Used in tests or long-running scripts.",
  "doc.language.code.comment.get.all": "Returns all currently loaded translations",
  "doc.language.code.comment.get.key": "Returns a specific translated string by key",
  "doc.language.code.comment.current": "Gets the currently active language code",
  "doc.language.code.comment.load": "Loads a specific language (or auto-detects if none)",
  "doc.language.code.comment.default": "Gets the configured default language",
  "doc.language.code.comment.detect": "Detects the browser's preferred language via HTTP headers",
  "doc.language.get.desc": "Accesses translations from the currently active language. If none loaded, it will detect or use default.",
  "doc.language.current.desc": "Returns the current language code (e.g., 'pt-br').",
  "doc.language.load.desc": "Loads translation files for a given language. Falls back to default if unavailable.",
  "doc.language.default.desc": "Returns the language set in configuration (.env > DEFAULT_LANGUAGE).",
  "doc.language.detect.desc": "Parses HTTP headers to guess the user's preferred language.",
  "doc.path.code.comment.root": "Gets the absolute path to the project root.",
  "doc.path.root.desc": "Returns the full path to the project root, two levels above the current directory.",
  "doc.path.code.comment.app": "Gets the /app directory path.",
  "doc.path.app.desc": "Returns the full path to the /app folder inside the project.",
  "doc.path.code.comment.appHelpers": "Gets the /app/helpers directory path.",
  "doc.path.appHelpers.desc": "Returns the full path to the helpers folder inside the application.",
  "doc.path.code.comment.appControllers": "Gets the /app/Controllers directory path.",
  "doc.path.appControllers.desc": "Returns the path where the application's controllers are located.",
  "doc.path.code.comment.appModels": "Gets the /app/Models directory path.",
  "doc.path.appModels.desc": "Returns the path where the application's models are located.",
  "doc.path.code.comment.appViews": "Gets the /app/views directory path.",
  "doc.path.appViews.desc": "Returns the full path to the views folder of the application.",
  "doc.path.code.comment.appViewsPages": "Gets the /app/views/pages directory path.",
  "doc.path.appViewsPages.desc": "Returns the path for the application's page-specific views.",
  "doc.path.code.comment.appViewsTemplates": "Gets the /app/views/templates directory path.",
  "doc.path.appViewsTemplates.desc": "Returns the path for reusable template views.",
  "doc.path.code.comment.system": "Gets the /system directory path.",
  "doc.path.system.desc": "Returns the path to the system folder with core framework files.",
  "doc.path.code.comment.systemHelpers": "Gets the /system/helpers directory path.",
  "doc.path.systemHelpers.desc": "Returns the path to the internal system helpers.",
  "doc.path.code.comment.systemIncludes": "Gets the /system/includes directory path.",
  "doc.path.systemIncludes.desc": "Returns the path of internal include files used by the core system.",
  "doc.path.code.comment.public": "Gets the /public directory path.",
  "doc.path.public.desc": "Returns the public folder path containing assets like index.php, images, JS, CSS.",
  "doc.path.code.comment.storage": "Gets the /storage directory path.",
  "doc.path.storage.desc": "Returns the path for internal application storage.",
  "doc.path.code.comment.storageSessions": "Gets the /storage/sessions directory path.",
  "doc.path.storageSessions.desc": "Returns the path where session files are stored on the server.",
  "doc.path.code.comment.storageLogs": "Gets the /storage/logs directory path.",
  "doc.path.storageLogs.desc": "Returns the path to the application's log files.",
  "doc.path.code.comment.languages": "Gets the /languages directory path.",
  "doc.path.languages.desc": "Returns the path where the system's language files are stored.",
  "doc.path.code.comment.basePath": "Gets the application's configured base path.",
  "doc.path.basePath.desc": "Returns the normalized base path from BASE_PATH environment variable, starting with slash and without trailing slashes.",
  "doc.path.code.comment.siteURL": "Generates the full site URL with optional suffix.",
  "doc.path.siteURL.desc": "Generates the full site URL (with basePath) and appends an optional final path (e.g., dashboard → /dashboard).",
  "doc.response.code.comment.redirect": "Creates a redirect response to the given URL.",
  "doc.response.redirect.desc": "Generates an intelligent redirect response, supporting HTTP status codes and 'refresh' method for specific servers like IIS.",
  "doc.response.code.comment.html": "Creates an HTML response.",
  "doc.response.html.desc": "Returns an HTML response with the given HTTP status code (default 200).",
  "doc.response.code.comment.json": "Creates a JSON response, either from a string or array.",
  "doc.response.json.desc": "If it's an array, it is encoded as JSON. If it's a string, it's sent raw as JSON without encoding.",
  "doc.response.code.comment.xml": "Creates a response with XML content.",
  "doc.response.xml.desc": "Generates a valid XML response with proper Content-Type and HTTP status.",
  "doc.session.code.comment.start": "Starts the session if it has not already been started.",
  "doc.session.start.desc": "Checks and starts the PHP session, throwing an exception if the driver is set to 'none'.",
  "doc.session.code.comment.has": "Checks if a session variable exists.",
  "doc.session.has.desc": "Returns true if the session key is set, false otherwise.",
  "doc.session.code.comment.get": "Retrieves the value of a session variable.",
  "doc.session.get.desc": "Returns the stored value or the given default if the session key does not exist.",
  "doc.session.code.comment.set": "Sets a session variable.",
  "doc.session.set.desc": "Assigns a value to the given session key.",
  "doc.session.code.comment.setMany": "Sets multiple session variables at once.",
  "doc.session.setMany.desc": "Assigns a batch of session variables from an associative array.",
  "doc.session.code.comment.forget": "Removes a specific session variable.",
  "doc.session.forget.desc": "Deletes the given session key if it exists.",
  "doc.session.code.comment.clear": "Clears all session variables without destroying the session.",
  "doc.session.clear.desc": "Empties the current session data but keeps the session alive.",
  "doc.session.code.comment.save": "Manually saves and closes the current session.",
  "doc.session.save.desc": "Saves the session data and releases the session lock immediately.",
  "doc.session.code.comment.destroy": "Destroys the current session completely.",
  "doc.session.destroy.desc": "Clears session data and removes the session cookie from the browser.",
  "doc.session.code.comment.regenerate": "Regenerates the session ID.",
  "doc.session.regenerate.desc": "Creates a new session ID, useful for security after login or changes.",
  "doc.view.code.comment.share": "Shares a global variable with all views.",
  "doc.view.share.desc": "Defines a global variable that will be available in all rendered views.",
  "doc.view.code.comment.shareMany": "Shares multiple global variables at once.",
  "doc.view.shareMany.desc": "Defines multiple global variables to be available in all views.",
  "doc.view.code.comment.forget": "Removes a shared global variable.",
  "doc.view.forget.desc": "Removes a specific global variable from the view scope.",
  "doc.view.code.comment.forgetMany": "Removes multiple shared global variables.",
  "doc.view.forgetMany.desc": "Removes a list of global variables from the view scope.",
  "doc.view.code.comment.clear": "Removes all shared global variables.",
  "doc.view.clear.desc": "Completely clears all defined global variables for views.",
  "doc.view.code.comment.setTemplate": "Sets the relative path to the main layout template for rendering.",
  "doc.view.setTemplate.desc": "Defines the base layout used when rendering all views.",
  "doc.view.code.comment.getTemplate": "Gets the currently configured layout template path.",
  "doc.view.getTemplate.desc": "Returns the current layout path (defaults to /template.php if not set).",
  "doc.view.code.comment.renderPage": "Renders a page view with data inside the defined layout.",
  "doc.view.renderPage.desc": "Includes the page view into the current layout, supporting scoped and shared variables.",
  "doc.view.code.comment.renderHtml": "Renders raw HTML content within the current layout.",
  "doc.view.renderHtml.desc": "Embeds a direct HTML string inside the layout, useful for dynamic or pre-rendered content.",
  "doc.view.code.comment.getGlobals": "Gets all shared global variables.",
  "doc.view.getGlobals.desc": "Returns all variables set using `share()` to be available in templates.",
  "user.not-found": "User not found!",
  "user.profile": "User Profile",
  "user.profile.id": "ID:",
  "user.profile.name": "Name:",
  "user.profile.email": "Email:",
  "back.home": "← Back to Home",
  
  "session.driver.not-found": "Session driver not defined",
  "database.driver.not-found": "Database connection driver not defined",
  "database.parameters.required.info": "The following required parameters for database connection were not defined: ",
  "database.driver.not-supported.info": "Unsupported DB driver: ",
  "database.connection.error.info": "Error connecting to the database: ",
  "database.tables.error.info": "Error creating tables in the database: ",
  "http.404.title": "404 - Page Not Found",
  "http.500.title": "Internal Server Error"
}